
### Interface Selector
@callback(
    Output("onboard_model", "options", allow_duplicate=True),
    Output("model_table_body", "children", allow_duplicate=True),
    Output("model_table_body", "value", allow_duplicate=True),
    Input("agent_interface", "value"),
    prevent_initial_call=True,
)
def choose_interface(value):
        return [o.__name__ for o in idx], Tb_children, []

### Model Selector
@callback(
    Output("model_table_head", "children", allow_duplicate=True),
    Output("model_table_subhead", "children"),
    Output("coa_update", "data", allow_duplicate=True),
    Input("onboard_model", "value"),
    prevent_initial_call=True,
)
def select_model(value):
    return table_head, table_subhead, True


### Add Action Button
@app.callback(
    Output("my-range-slider", "value"),
    Output("model_table_body", "children"),
    Input("AddNewCommand", "n_clicks"),
    State("my-range-slider", "value"),
    State("model_table_body", "children"),
    State("agent_interface", "value"),
)
def add_COA_command(val, slider_values, children, interface):
        return slider_values, children


### Slider Action
@callback(
    Output({"type": "actionstart", "index": ALL}, "value"),
    Output("coa_update", "data", allow_duplicate=True),
    Input("my-range-slider", "drag_value"),
    State("agent_interface", "value"),
    prevent_initial_call=True,
)
def update_output(drag_value, interface):
    return drag_value, True


### Parameter Update
@callback(
    Output("coa_update", "data", allow_duplicate=True),
    Input({"type": "actionparam", "index": ALL}, "value"),
    State("agent_interface", "value"),
    prevent_initial_call=True,
)
def update_coa_parameters(value, interface):
    return interface


### Process COA Update
@callback(
    Output("indicator-graphic", "figure"),
    Output("stats-graphic-vel", "figure"),
    Output("stats-graphic-fuel", "figure"),
    Output("stats-graphic-acc", "figure"),
    Input("coa_update", "data"),
    State("agent_interface", "value"),
)
def process_coa_update(value, interface):
    return fig, fig1, fig2, fig3


### Generate COA
@callback(
    Output("memory", "data"),
    Input("GenerateCOA", "n_clicks"),
    State("agent_interface", "value"),
    prevent_initial_call=True,
)
def generate_coa(value, interface):
    return "generated"


### Parameter Update
@callback(
    Output("model_table_body", "children", allow_duplicate=True),
    Output("my-range-slider", "value", allow_duplicate=True),
    Output("coa_update", "data", allow_duplicate=True),
    Input("memory", "data"),
    State("model_table_body", "children"),
    State("my-range-slider", "value"),
    State("agent_interface", "value"),
    prevent_initial_call=True,
)
def load_coa(coa_name, table_body, slider, interface):
    return table_body, slider_values, True